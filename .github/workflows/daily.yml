name: Scrape

on:
  workflow_dispatch: {} # Manuell "Run workflow"-knapp
  schedule:
    - cron: '0 3 * * *' # Dagligen 03:00 CEST (03:00 UTC)

permissions:
  contents: write # krävs för git push med GITHUB_TOKEN

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # underlättar rebase innan push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: python -m playwright install

      # Kör varje script i eget steg, fortsätt även om ett misslyckas
      - name: Run fetch_kpi.py
        run: python ./scripts/fetch_kpi.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Run amazon_scape_bought_playwright_us_de.py
        run: python ./scripts/amazon_scape_bought_playwright_us_de.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Run track_combined_prices.py
        run: python ./scripts/track_combined_prices.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Run track_fractal_rankings_playwright.py
        run: python ./scripts/track_fractal_rankings_playwright.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Run track_nelly_aov.py
        run: python ./scripts/track_nelly_aov.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Run track_rugvista_bestsellers.py
        run: python ./scripts/track_rugvista_bestsellers.py
        timeout-minutes: 10
        continue-on-error: true

      - name: Commit & push generated data (if any)
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH="${{ github.ref_name }}"

          # Lägg bara till data-katalogen och scripts/html_dumps i repo-roten
          git add -A data scripts/html_dumps || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(data): update scraped XLSX [skip ci]"

          git pull --rebase origin "$BRANCH" || true

          git push origin "$BRANCH"

      - name: Upload data artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data-outputs
          path: |
            data/**
            Scripts/data/**
