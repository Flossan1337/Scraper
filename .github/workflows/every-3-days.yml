name: Scrape every 3 days (combined)

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 */3 * *'   # var tredje dag kl 02:00 UTC

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (pip + Playwright)
        run: |
          python -m pip install -r requirements.txt
          python -m playwright install chromium
          python -m playwright install-deps

      # --- Kolla att secrets faktiskt når jobbet (skriver inte ut värden) ---
      - name: Sanity check env (no secrets printed)
        env:
          ADTRACTION_EMAIL: ${{ secrets.ADTRACTION_EMAIL }}
          ADTRACTION_PASSWORD: ${{ secrets.ADTRACTION_PASSWORD }}
        run: |
          [ -n "$ADTRACTION_EMAIL" ] && echo "EMAIL is present" || (echo "EMAIL is MISSING" && exit 1)
          [ -n "$ADTRACTION_PASSWORD" ] && echo "PASSWORD is present" || (echo "PASSWORD is MISSING" && exit 1)

      # ---------- Kör ENDA skriptet och logga allt ----------
      - name: Run Adtraction EPC (combined)
        env:
          ADTRACTION_EMAIL: ${{ secrets.ADTRACTION_EMAIL }}
          ADTRACTION_PASSWORD: ${{ secrets.ADTRACTION_PASSWORD }}
        run: |
          set -o pipefail
          python scripts/adtraction_epc_combined.py | tee combined.log

      # ---------- Bygg Step Summary (från combined.log) ----------
      - name: Build Step Summary
        shell: bash
        run: |
          COUNTRIES=("Sweden" "Denmark" "Finland" "Norway" "France" "Germany" "Italy" "Spain" "Netherlands" "Poland" "Switzerland")

          echo "## Adtraction EPC – Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          # ------- Finance -------
          echo "### Finance EPC" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "| Country | n | Median (SEK) | Status |" >> "$GITHUB_STEP_SUMMARY"
          echo "|---|---:|---:|---|" >> "$GITHUB_STEP_SUMMARY"
          for C in "${COUNTRIES[@]}"; do
            LINE="$(grep -E "^\[${C}\] .*n=[0-9]+.*median=[0-9.]+ SEK" -m 1 combined.log || true)"
            if [[ -n "$LINE" ]]; then
              N="$(sed -E 's/.*n=([0-9]+).*/\1/' <<< "$LINE")"
              MED="$(sed -E 's/.*median=([0-9.]+) SEK.*/\1/' <<< "$LINE")"
              STATUS="OK"
            else
              if grep -qE "^\[${C}\] No EPC values found \(Finance\)\.|^\[${C}\] Error:" combined.log; then
                N="0"; MED="-"; STATUS="Fail"
              else
                N="-"; MED="-"; STATUS="No data"
              fi
            fi
            echo "| ${C} | ${N} | ${MED} | ${STATUS} |" >> "$GITHUB_STEP_SUMMARY"
          done
          echo "" >> "$GITHUB_STEP_SUMMARY"

          # ------- Non-Finance -------
          echo "### Non-Finance EPC" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "| Country | n | Median (SEK) | Status |" >> "$GITHUB_STEP_SUMMARY"
          echo "|---|---:|---:|---|" >> "$GITHUB_STEP_SUMMARY"
          for C in "${COUNTRIES[@]}"; do
            LINE="$(grep -E "^\[${C}\] .*n=[0-9]+.*median_ex_fin=[0-9.]+ SEK" -m 1 combined.log || true)"
            if [[ -n "$LINE" ]]; then
              N="$(sed -E 's/.*n=([0-9]+).*/\1/' <<< "$LINE")"
              MED="$(sed -E 's/.*median_ex_fin=([0-9.]+) SEK.*/\1/' <<< "$LINE")"
              STATUS="OK"
            else
              if grep -qE "^\[${C}\] No EPC values found \(Non-Finance\)\.|^\[${C}\] Error:" combined.log; then
                N="0"; MED="-"; STATUS="Fail"
              else
                N="-"; MED="-"; STATUS="No data"
              fi
            fi
            echo "| ${C} | ${N} | ${MED} | ${STATUS} |" >> "$GITHUB_STEP_SUMMARY"
          done
          echo "" >> "$GITHUB_STEP_SUMMARY"

      # ---------- Commit uppdaterade Excel-filer ----------
      - name: Commit updated data files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.xlsx
          git commit -m "Update EPC data (combined, every-3-days)" || echo "No changes to commit"
          git push

      # ---------- Ladda upp artifacts för felsökning ----------
      - name: Upload combined.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: combined-log
          path: combined.log
          if-no-files-found: warn

      - name: Upload login screenshot (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: login-debug
          path: login_fail.png
          if-no-files-found: ignore
